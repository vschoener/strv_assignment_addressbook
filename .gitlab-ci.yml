variables:
  # I let some unused variable because I tried to use them with the image built during build stage
  MONGO_HOST: mongo
  MONGO_PORT: 27017
  MONGO_DATABASE: AddressBook
  JWT_SECRET: "MY_SECRET_HASH"
  DOCKER_DRIVER: overlay2
  TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  RELEASE_HEROKU_IMAGE: registry.heroku.com/addressbook-strv-test/web

services:
  - docker:dind

stages:
  - build
  - test
  - staging

build:
  image: docker:latest
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build --cache-from $RELEASE_IMAGE -t $RELEASE_IMAGE .
    - docker push $RELEASE_IMAGE

# I would preferred using my last docker built but didn't find a way connect
# to the mongo server (or we need to use a tricks list this: https://gitlab.com/gitlab-org/gitlab-runner/issues/2691)
test:
  stage: test
  image: node:latest
  services:
    - mongo:latest
  script:
    - npm install
    - npm test

deploy-staging:
  image: docker:latest
  variables:
    GIT_STRATEGY: none
  stage: staging
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker pull $RELEASE_IMAGE
    - docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
    - docker tag $RELEASE_IMAGE $RELEASE_HEROKU_IMAGE
    - docker push $RELEASE_HEROKU_IMAGE
  only:
    - staging

# Later we could add the deploy-production following the deploy-staging logic with only: master
